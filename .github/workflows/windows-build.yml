name: Windows EXE (PyInstaller)

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-win:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }
          pip install pyinstaller pyinstaller-hooks-contrib

      - name: Compute version
        shell: pwsh
        run: |
          if ("${{ github.ref }}".StartsWith("refs/tags/")) {
            $ver = "${{ github.ref_name }}"        # ex: v1.2.3
          } else {
            $ver = "dev-${{ github.run_number }}"
          }
          "APP_VER=$ver" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Locate entry point
        id: entry
        shell: pwsh
        run: |
          # Procura main.py em locais comuns
          $candidates = @(
            "main.py",
            "refactor_ui_single_responsibility\main.py",
            "src\main.py",
            "app\main.py"
          )
          $entry = $null
          foreach ($c in $candidates) { if (Test-Path $c) { $entry = $c; break } }
          if (-not $entry) {
            Write-Host "Conteúdo do repositório:"
            Get-ChildItem -Recurse -Depth 3 | Select-Object -First 200 | Format-Table
            throw "Não encontrei o entry point (main.py). Ajuste a lista de candidatos neste passo."
          }
          "ENTRY=$entry" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "ENTRY => $entry"

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          if (Test-Path build) { Remove-Item build -Recurse -Force }
          if (Test-Path dist)  { Remove-Item dist  -Recurse -Force }

          # usa ícone se existir
          $ico = ""
          if (Test-Path "assets\app.ico") { $ico = "-i assets\app.ico" }

          # chame SEMPRE via módulo para evitar wrappers estranhos
          python -m PyInstaller --noconfirm --clean --onefile --windowed $ico `
            -n "UFU-PreencheDiario-$env:APP_VER" "${{ env.ENTRY }}"

          Write-Host "Dist contents:"
          Get-ChildItem dist -Recurse | Format-Table -AutoSize

      - name: Upload artifact (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: UFU-PreencheDiario-${{ env.APP_VER }}-win
          path: dist/UFU-PreencheDiario-${{ env.APP_VER }}.exe
          if-no-files-found: error

      - name: Publish GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/UFU-PreencheDiario-${{ env.APP_VER }}.exe
          generate_release_notes: true